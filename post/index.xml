<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on cloud_adventures</title>
    <link>https://colonmelvin.github.io/post/</link>
    <description>Recent content in Posts on cloud_adventures</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>colon.melvin@gmail.com (Colon Melvin)</managingEditor>
    <webMaster>colon.melvin@gmail.com (Colon Melvin)</webMaster>
    <lastBuildDate>Wed, 24 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://colonmelvin.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First post!</title>
      <link>https://colonmelvin.github.io/post/2020-06-24-first-post/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      <author>colon.melvin@gmail.com (Colon Melvin)</author>
      <guid>https://colonmelvin.github.io/post/2020-06-24-first-post/</guid>
      <description>Let&amp;rsquo;s see how codeblocks look in this first post. Below is a block I&amp;rsquo;ve used in the past to elevate interactive PowerShell scripts.
# Elevate to admin If (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] &amp;#34;Administrator&amp;#34;)) { #&amp;#34;No Administrative rights, it will display a popup window asking user for Admin rights&amp;#34; $arguments = &amp;#34;&amp;amp; &amp;#39;&amp;#34; + $myinvocation.mycommand.definition + &amp;#34;&amp;#39;&amp;#34; Start-Process &amp;#34;$psHome\powershell.exe&amp;#34; -Verb runAs -ArgumentList $arguments set-executionpolicy -scope CurrentUser -executionPolicy Bypass break } # code here </description>
    </item>
    
  </channel>
</rss>